import random


def choose_difficulty():
    print("\nüéØ –í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:")
    print("1 - –õ–µ–≥–∫–∏–π (15 –ø–æ–ø—ã—Ç–æ–∫)")
    print("2 - –°—Ä–µ–¥–Ω–∏–π (10 –ø–æ–ø—ã—Ç–æ–∫)")
    print("3 - –°–ª–æ–∂–Ω—ã–π (5 –ø–æ–ø—ã—Ç–æ–∫)")
    print("4 - –≠–∫—Å–ø–µ—Ä—Ç (3 –ø–æ–ø—ã—Ç–∫–∏)")

    while True:
        try:
            choice = int(input("–¢–≤–æ–π –≤—ã–±–æ—Ä (1-4): "))
            if choice == 1:
                return 15, 80  # –ø–æ–ø—ã—Ç–∫–∏, –Ω–∞—á–∞–ª—å–Ω—ã–µ –æ—á–∫–∏
            elif choice == 2:
                return 10, 100
            elif choice == 3:
                return 5, 150
            elif choice == 4:
                return 3, 200
            else:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4")
        except ValueError:
            print("–í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4!")


def display_history(attempts_history, secret_number):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ø—ã—Ç–æ–∫"""
    print("\nüìä –ò—Å—Ç–æ—Ä–∏—è —Ç–≤–æ–∏—Ö –ø–æ–ø—ã—Ç–æ–∫:")
    print("-" * 40)
    for i, (attempt_num, guess, difference) in enumerate(attempts_history, 1):
        status = "üéØ –ü–û–ü–ê–î–ê–ù–ò–ï!" if difference == 0 else f"–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: {difference}"
        print(f"{attempt_num:2d}. –ß–∏—Å–ª–æ: {guess:3d} | {status}")
    print("-" * 40)


def guess_number():
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'!")
    print("–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!")

    # –í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    max_attempts, initial_score = choose_difficulty()

    secret_number = random.randint(1, 100)
    attempts = 0
    previous_guess = None
    score = initial_score
    attempts_history = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ø—ã—Ç–æ–∫

    print(f"\n–£ —Ç–µ–±—è –µ—Å—Ç—å {max_attempts} –ø–æ–ø—ã—Ç–æ–∫!")
    print(f"–¢–≤–æ–π –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—á–µ—Ç: {score} –æ—á–∫–æ–≤")

    while attempts < max_attempts:
        try:
            guess = int(input(f"\n–ü–æ–ø—ã—Ç–∫–∞ {attempts + 1}. –í–≤–µ–¥–∏ —á–∏—Å–ª–æ: "))
            attempts += 1

            # –®—Ç—Ä–∞—Ñ –∑–∞ –∫–∞–∂–¥—É—é –ø–æ–ø—ã—Ç–∫—É (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏)
            score -= 10 if max_attempts <= 5 else 5

            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—ã—Ç–∫—É –≤ –∏—Å—Ç–æ—Ä–∏—é
            difference = abs(guess - secret_number)
            attempts_history.append((attempts, guess, difference))

            if guess == secret_number:
                bonus = max_attempts - attempts  # –ë–æ–Ω—É—Å –∑–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ–ø—ã—Ç–∫–∏
                score += bonus * 15
                print(f"\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {secret_number} –∑–∞ {attempts} –ø–æ–ø—ã—Ç–æ–∫!")
                print(f"üèÜ –¢–≤–æ–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—á–µ—Ç: {score} –æ—á–∫–æ–≤")

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏ –ø–æ–±–µ–¥–µ
                display_history(attempts_history, secret_number)

                # –†–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
                if max_attempts <= 3:
                    print("üöÄ –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –ù–∞ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–º —É—Ä–æ–≤–Ω–µ!")
                elif attempts <= max_attempts * 0.3:
                    print("‚≠ê –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —ç–∫—Å—Ç—Ä–∞—Å–µ–Ω—Å!")
                elif attempts <= max_attempts * 0.6:
                    print("üëç –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!")
                else:
                    print("üí™ –•–æ—Ä–æ—à–∞—è –∏–≥—Ä–∞!")
                break
            elif guess < secret_number:
                print("–°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–æ–µ —á–∏—Å–ª–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ.")
            else:
                print("–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ.")

            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
            if previous_guess is not None:
                current_diff = abs(guess - secret_number)
                previous_diff = abs(previous_guess - secret_number)
                if current_diff < previous_diff:
                    print("üî• –¢—ã —Å—Ç–∞–ª –±–ª–∏–∂–µ –∫ —Ü–µ–ª–∏!")
                elif current_diff > previous_diff:
                    print("‚ùå –¢—ã –æ—Ç–¥–∞–ª–∏–ª—Å—è –æ—Ç —Ü–µ–ª–∏...")

            previous_guess = guess

            # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–ø—ã—Ç–æ–∫
            remaining = max_attempts - attempts
            if remaining > 0:
                print(f"–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {remaining}")
                print(f"–¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: {score} –æ—á–∫–æ–≤")

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∂–¥—ã–µ 3 –ø–æ–ø—ã—Ç–∫–∏
                if attempts % 3 == 0:
                    print(f"\nüìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∏: {[h[1] for h in attempts_history[-3:]]}")

                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
                if remaining == max_attempts // 2:
                    if max_attempts <= 5:  # –¢–æ–ª—å–∫–æ –Ω–∞ —Å–ª–æ–∂–Ω—ã—Ö —É—Ä–æ–≤–Ω—è—Ö
                        if secret_number % 2 == 0:
                            print("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: —á–∏—Å–ª–æ —á–µ—Ç–Ω–æ–µ!")
                        else:
                            print("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: —á–∏—Å–ª–æ –Ω–µ—á–µ—Ç–Ω–æ–µ!")
                    else:
                        print("üí≠ –ü–æ–¥—É–º–∞–π —Ö–æ—Ä–æ—à–µ–Ω—å–∫–æ!")
            else:
                print(f"\nüí• –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å! –Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {secret_number}")
                print(f"üèÜ –¢–≤–æ–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—á–µ—Ç: {score} –æ—á–∫–æ–≤")
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ
                display_history(attempts_history, secret_number)

        except ValueError:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!")
            score -= 2  # –®—Ç—Ä–∞—Ñ –∑–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥

    play_again = input("\n–•–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): ").lower()
    if play_again in ['–¥–∞', '–¥', 'yes', 'y']:
        guess_number()
    else:
        print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")


if __name__ == "__main__":
    guess_number()